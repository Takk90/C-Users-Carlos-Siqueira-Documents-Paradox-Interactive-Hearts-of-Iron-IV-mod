############################################################################################################
#	AC mod - scripted effects
############################################################################################################
# Written by Hiddengearz and Chondrite originally.
# Updated by Angriest Bird
# Inspired by the original Allied Construction Project https://steamcommunity.com/sharedfiles/filedetails/?id=1368202826
#This reworked system allows you to have 5 of each project active per country.
#So you can have 5 CIC projects, 5 INF projects, 5 MIC projects etc in every country in the game
#There are 8 project types * 5 of each allowed per country = 40 investments possibile in one country * 210 countries the player can invest in = 8400 possibile investments for the player
#Now if the AI also does the same that's 210 * 8400 = 1,764,000 possibile investments possibile

# BUILDING CONSTRUCTION MONETARY COSTS
@BUILD_COST_CIVILIAN_FACTORY = 7.50
@BUILD_COST_MILITARY_FACTORY = 8.00
@BUILD_COST_DOCKYARD = 7.50
@BUILD_COST_INFRASTRUCTURE = 3.5
@BUILD_COST_OFFICES = 12.0
@BUILD_COST_ANTIAIR = 3.25
@BUILD_COST_RADAR = 1.75
@BUILD_COST_AIRBASE = 2.25
@BUILD_COST_FUEL_SILO = 3
@BUILD_COST_INTERNET_STATION = 3.0
@BUILD_COST_REFINERY = 4.25

@BUILD_CONST_COST_CIVILIAN_FACTORY = 38000
@BUILD_CONST_COST_MILITARY_FACTORY = 42000
@BUILD_CONST_COST_DOCKYARD = 45000
@BUILD_CONST_COST_INFRASTRUCTURE = 12500
@BUILD_CONST_COST_OFFICES = 40000
@BUILD_CONST_COST_ANTIAIR = 12500
@BUILD_CONST_COST_RADAR = 4000
@BUILD_CONST_COST_AIRBASE = 1250
@BUILD_CONST_COST_FUEL_SILO = 12000
@BUILD_CONST_COST_INTERNET_STATION = 4000
@BUILD_CONST_COST_REFINERY = 25000

# Country:
#
# var: AC_active_projects - number of active projects
# array: AC_project)array : fixed array that contains projects
# index: project id
# value: 0 = available, <0 = reserved (target state id), 1 = to be reset
#
# variables saved for each project id (not in arrays) : 0 - 14 = project ids, -1 = gui
#
# AC_project_target_country^id
# AC_project_assigned_factories^id
# AC_project_build_amount^id
# project_building_type^id
# AC_project_construction_duration^id
# AC_project_political_power_cost^id
# AC_project_construction_speed_display^id
# AC_project_total_construction_duration_display^id

# State:
#
# array: AC_projects_in_state : every country id that owns a project in this state
# var: AC_project_target_state_TAG : project id of TAG in this state

# Rewrite of the Former System
# Combined AC_update_build_time and AC_update_build_cost
# Should be set for easier maintenance

# Called in the on_startup
init_investment_system = {
	### BUILDING CONSTRUCTION COSTS

	set_variable = { global.BUILD_CONST_COST_CIVILIAN_FACTORY = 38000 }
	set_variable = { global.BUILD_CONST_COST_MILITARY_FACTORY = 42000 }
	set_variable = { global.BUILD_CONST_COST_DOCKYARD = 45000 }
	set_variable = { global.BUILD_CONST_COST_INFRASTRUCTURE = 12500 }
	set_variable = { global.BUILD_CONST_COST_OFFICES = 40000 }
	set_variable = { global.BUILD_CONST_COST_ANTIAIR = 12500 }
	set_variable = { global.BUILD_CONST_COST_RADAR = 4000 }
	set_variable = { global.BUILD_CONST_COST_AIRBASE = 1250 }
	set_variable = { global.BUILD_CONST_COST_FUEL_SILO = 12000 }
	set_variable = { global.BUILD_CONST_COST_INTERNET_STATION = 4000 }
	set_variable = { global.BUILD_CONST_COST_REFINERY = 25000 }

	### BUILDING MONETARY COST
	set_variable = { global.BUILD_COST_CIVILIAN_FACTORY = 7.50 }
	set_variable = { global.BUILD_COST_MILITARY_FACTORY = 8.0 }
	set_variable = { global.BUILD_COST_DOCKYARD = 7.50 }
	set_variable = { global.BUILD_COST_INFRASTRUCTURE = 3.5 }
	set_variable = { global.BUILD_COST_OFFICES = 12.0 }
	set_variable = { global.BUILD_COST_ANTIAIR = 3.25 }
	set_variable = { global.BUILD_COST_RADAR = 1.75 }
	set_variable = { global.BUILD_COST_AIRBASE = 2.25 }
	set_variable = { global.BUILD_COST_FUEL_SILO = 3 }
	set_variable = { global.BUILD_COST_INTERNET_STATION = 3.0 }
	set_variable = { global.BUILD_COST_REFINERY = 4.25 }

	every_country = {
		if = { limit = { is_ai = no }
			set_variable = { project_build_amount^-1 = 1 }
			set_variable = { constructable_buildings = 1 }
		}

		resize_array = { array = project_array value = 0 size = 15 } # Index starts at 0
	}
}

ingame_init_investment_system = {
	set_variable = { project_build_amount^-1 = 1 }
	set_variable = { project_building_type^-1 = 1 }
	set_variable = { constructable_buildings = 1 }

	resize_array = { array = project_array value = 0 size = 15 } # Index starts at 0
}

refresh_gui = {
	if = {
		limit = { check_variable = { ROOT.refresh_gui = 0 } }
		set_variable = { ROOT.refresh_gui = 1 }
	}
	else = { set_variable = { ROOT.refresh_gui = 0 } }
}

update_gui = {
	project_monetary_cost_calculation = yes

	set_variable = { project_type = -1 }
	set_variable = { project = -1 }
	PREV = { init_project = yes }
	set_variable = { ROOT.gui_updated = PREV.id }
	clear_variable = project_type
	clear_variable = project
}

project_monetary_cost_calculation = { # Replaces AC_calc_pp_cost in the section
	if = { limit = { check_variable = { project_building_type^-1 = 1 } }
		set_variable = { project_monetary_cost^-1 = global.BUILD_COST_CIVILIAN_FACTORY }
	}
	else_if = { limit = { check_variable = { project_building_type^-1 = 2 } }
		set_variable = { project_monetary_cost^-1 = global.BUILD_COST_MILITARY_FACTORY }
	}
	else_if = { limit = { check_variable = { project_building_type^-1 = 3 } }
		set_variable = { project_monetary_cost^-1 = global.BUILD_COST_DOCKYARD }
	}
	else_if = { limit = { check_variable = { project_building_type^-1 = 4 } }
		set_variable = { project_monetary_cost^-1 = global.BUILD_COST_INFRASTRUCTURE }
	}
	else_if = { limit = { check_variable = { project_building_type^-1 = 5 } }
		set_variable = { project_monetary_cost^-1 = global.BUILD_COST_OFFICES }
	}
	else_if = { limit = { check_variable = { project_building_type^-1 = 6 } }
		set_variable = { project_monetary_cost^-1 = global.BUILD_COST_ANTIAIR }
	}
	else_if = { limit = { check_variable = { project_building_type^-1 = 7 } }
		set_variable = { project_monetary_cost^-1 = global.BUILD_COST_RADAR }
	}
	else_if = { limit = { check_variable = { project_building_type^-1 = 8 } }
		set_variable = { project_monetary_cost^-1 = global.BUILD_COST_AIRBASE }
	}
	else_if = { limit = { check_variable = { project_building_type^-1 = 9 } }
		set_variable = { project_monetary_cost^-1 = global.BUILD_COST_FUEL_SILO }
	}
	else_if = { limit = { check_variable = { project_building_type^-1 = 10 } }
		set_variable = { project_monetary_cost^-1 = global.BUILD_COST_INTERNET_STATION }
	}
	else_if = { limit = { check_variable = { project_building_type^-1 = 11 } }
		set_variable = { project_monetary_cost^-1 = global.BUILD_COST_REFINERY }
	}

	# AC Build Cost Modifiers
	set_temp_variable = { AC_cost_modifier = 1 }
	if = {
		limit = { PREV = { CONTROLLER = { has_idea = paralyzing_corruption } } }
		add_to_temp_variable = { AC_cost_modifier = 0.45 }
	}
	else_if = {
		limit = { PREV = { CONTROLLER = { has_idea = crippling_corruption } } }
		add_to_temp_variable = { AC_cost_modifier = 0.40 }
	}
	else_if = {
		limit = { PREV = { CONTROLLER = { has_idea = rampant_corruption } } }
		add_to_temp_variable = { AC_cost_modifier = 0.35 }
	}
	else_if = {
		limit = { PREV = { CONTROLLER = { has_idea = unrestrained_corruption } } }
		add_to_temp_variable = { AC_cost_modifier = 0.30 }
	}
	else_if = {
		limit = { PREV = { CONTROLLER = { has_idea = systematic_corruption } } }
		add_to_temp_variable = { AC_cost_modifier = 0.25 }
	}
	else_if = {
		limit = { PREV = { CONTROLLER = { has_idea = widespread_corruption } } }
		add_to_temp_variable = { AC_cost_modifier = 0.20 }
	}
	else_if = {
		limit = { PREV = { CONTROLLER = { has_idea = medium_corruption } } }
		add_to_temp_variable = { AC_cost_modifier = 0.15 }
	}
	else_if = {
		limit = { PREV = { CONTROLLER = { has_idea = modest_corruption } } }
		add_to_temp_variable = { AC_cost_modifier = 0.10 }
	}
	else_if = {
		limit = { PREV = { CONTROLLER = { has_idea = slight_corruption } } }
		add_to_temp_variable = { AC_cost_modifier = 0.05 }
	}

	PREV = {
		CONTROLLER = {
			set_variable = { ROOT.corporate_cost_modifier = corporate_tax_rate }
		}
	}
	divide_variable = { corporate_cost_modifier = 100 }
	add_to_temp_variable = { AC_cost_modifier = corporate_cost_modifier }
	# if you wish to make investments cheaper via focus or other effect
	# Example :
	# Raises investment for Canada by 5% just for being Canada
	# if = { limit = { tag = CAN } }
	# 	add_to_temp_variable = { AC_cost_modifier = 0.05 }
	# }

	# Calculates modified Build Cost
	set_variable = { displayable_monetary_cost_modifier = AC_cost_modifier }
	multiply_variable = { project_monetary_cost^-1 = AC_cost_modifier }
	multiply_variable = { project_monetary_cost^-1 = project_build_amount^-1 }
	set_variable = { project_monetary_cost_effect = project_monetary_cost^-1 }
	multiply_variable = { project_monetary_cost_effect = -1 }
}

get_building_construction_values = {
	if = { limit = { check_variable = { project_building_type^project_type  = 1 } }
		set_temp_variable = { building_cost = global.BUILD_CONST_COST_CIVILIAN_FACTORY }
		add_to_temp_variable = { construction_speed = modifier@production_speed_industrial_complex_factor }
	}
	else_if = { limit = { check_variable = { project_building_type^project_type  = 2 } }
		set_temp_variable = { building_cost = global.BUILD_CONST_COST_MILITARY_FACTORY }
		add_to_temp_variable = { construction_speed = modifier@production_speed_arms_factory_factor }
	}
	else_if = { limit = { check_variable = { project_building_type^project_type  = 3 } }
		set_temp_variable = { building_cost = global.BUILD_CONST_COST_DOCKYARD }
		add_to_temp_variable = { construction_speed = modifier@production_speed_dockyard_factor }
	}
	else_if = { limit = { check_variable = { project_building_type^project_type = 4 } }
		set_temp_variable = { building_cost = global.BUILD_CONST_COST_INFRASTRUCTURE }
		add_to_temp_variable = { construction_speed = modifier@production_speed_infrastructure_factor }
	}
	else_if = { limit = { check_variable = { project_building_type^project_type = 5 } }
		set_temp_variable = { building_cost = global.BUILD_CONST_COST_OFFICES }
		add_to_temp_variable = { construction_speed = modifier@production_speed_offices_factor }
	}
	else_if = { limit = { check_variable = { project_building_type^project_type = 6 } }
		set_temp_variable = { building_cost = global.BUILD_CONST_COST_ANTIAIR }
		add_to_temp_variable = { construction_speed = modifier@production_speed_anti_air_building_factor }
	}
	else_if = { limit = { check_variable = { project_building_type^project_type = 7 } }
		set_temp_variable = { building_cost = global.BUILD_CONST_COST_RADAR }
		add_to_temp_variable = { construction_speed = modifier@production_speed_radar_station_factor }
	}
	else_if = { limit = { check_variable = { project_building_type^project_type = 8 } }
		set_temp_variable = { building_cost = global.BUILD_CONST_COST_AIRBASE }
		add_to_temp_variable = { construction_speed = modifier@production_speed_air_base_factor }
	}
	else_if = { limit = { check_variable = { project_building_type^project_type = 9 } }
		set_temp_variable = { building_cost = global.BUILD_CONST_COST_FUEL_SILO }
		add_to_temp_variable = { construction_speed = modifier@production_speed_fuel_silo_factor }
	}
	else_if = { limit = { check_variable = { project_building_type^project_type = 10 } }
		set_temp_variable = { building_cost = global.BUILD_CONST_COST_INTERNET_STATION }
		add_to_temp_variable = { construction_speed = modifier@production_speed_internet_station_factor }
	}
	else_if = { limit = { check_variable = { project_building_type^project_type = 11 } }
		set_temp_variable = { building_cost = global.BUILD_CONST_COST_REFINERY }
		add_to_temp_variable = { construction_speed = modifier@production_speed_synthetic_refinery_factor }
	}

	add_to_temp_variable = { construction_speed = modifier@production_speed_buildings_factor }
}

get_available_project = {
	for_each_loop = {
		array = project_array
		if = {
			limit = { check_variable = { v = 0 } }

			set_variable = { new_project = i }
			set_temp_variable = { break = 1 }
		}
	}
}

add_finished_buildings = {
	set_temp_variable = { var_cost = ROOT.project_monetary_cost^ROOT.project }
	multiply_temp_variable = { var_cost = -1 }
	divide_temp_variable = { var_cost = ROOT.project_build_amount^ROOT.project }

	if = { limit = { ROOT = { check_variable = { project_building_type^project = 1 } } }
		add_building_construction = { type = industrial_complex level = 1 instant_build = yes }
		add_to_variable = { ROOT.project_monetary_cost^ROOT.project = var_cost }
	}
	else_if = { limit = { ROOT = { check_variable = { project_building_type^project = 2 } } }
		add_building_construction = { type = arms_factory level = 1 instant_build = yes }
		add_to_variable = { ROOT.project_monetary_cost^ROOT.project = var_cost }
	}
	else_if = { limit = { ROOT = { check_variable = { project_building_type^project = 3 } } }
		add_building_construction = { type = dockyard level = 1 instant_build = yes }
		add_to_variable = { ROOT.project_monetary_cost^ROOT.project = var_cost }
	}
	else_if = { limit = { ROOT = { check_variable = { project_building_type^project = 4 } } }
		add_building_construction = { type = infrastructure level = 1 instant_build = yes }
		add_to_variable = { ROOT.project_monetary_cost^ROOT.project = var_cost }
	}
	else_if = { limit = { ROOT = { check_variable = { project_building_type^project = 5 } } }
		add_building_construction = { type = offices level = 1 instant_build = yes }
		add_to_variable = { ROOT.project_monetary_cost^ROOT.project = var_cost }
	}
	else_if = { limit = { ROOT = { check_variable = { project_building_type^project = 6 } } }
		add_building_construction = { type = anti_air_building level = 1 instant_build = yes }
		add_to_variable = { ROOT.project_monetary_cost^ROOT.project = var_cost }
	}
	else_if = { limit = { ROOT = { check_variable = { project_building_type^project = 7 } } }
		add_building_construction = { type = radar_station level = 1 instant_build = yes }
		add_to_variable = { ROOT.project_monetary_cost^ROOT.project = var_cost }
	}
	else_if = { limit = { ROOT = { check_variable = { project_building_type^project = 8 } } }
		add_building_construction = { type = air_base level = 1 instant_build = yes }
		add_to_variable = { ROOT.project_monetary_cost^ROOT.project = var_cost }
	}
	else_if = { limit = { ROOT = { check_variable = { project_building_type^project = 9 } } }
		add_building_construction = { type = fuel_silo level = 1 instant_build = yes }
		add_to_variable = { ROOT.project_monetary_cost^ROOT.project = var_cost }
	}
	else_if = { limit = { ROOT = { check_variable = { project_building_type^project = 10 } } }
		add_building_construction = { type = internet_station level = 1 instant_build = yes }
		add_to_variable = { ROOT.project_monetary_cost^ROOT.project = var_cost }
	}
	else_if = { limit = { ROOT = { check_variable = { project_building_type^project = 11 } } }
		add_building_construction = { type = synthetic_refinery level = 1 instant_build = yes }
		add_to_variable = { ROOT.project_monetary_cost^ROOT.project = var_cost }
	}
}

init_project = {
	ROOT = {
		# Get Construction Speed Modifiers and Set Building Cost
		set_temp_variable = { construction_speed = 1 }

		get_building_construction_values = yes

		if = { limit = { NOT = { check_variable = { project_building_type^project_type = 4 } } }
			# Infrastructure
			set_temp_variable = { target_state_infra_speed = PREV.infrastructure_level }
			multiply_temp_variable = { target_state_infra_speed = 0.075 }
			add_to_temp_variable = { target_state_infra_speed = 1 }
			multiply_temp_variable = { construction_speed = target_state_infra_speed }
		}

		# Reduce Construction speed by 25%
		multiply_temp_variable = { construction_speed = 0.75 }

		set_variable = { project_construction_speed_display^project = 1 }
		multiply_variable = { project_construction_speed_display^project = 100 }
		round_variable = project_construction_speed_display^project

		# Total Factory Output
		multiply_temp_variable = { construction_speed = 100 }

		# Days to build
		divide_temp_variable = { building_cost = construction_speed }


		set_variable = { project_construction_duration^project = building_cost }
		round_variable = project_construction_duration^project

		# Decision tooltip for total time to build
		set_variable = { project_total_construction_duration_display^project = project_construction_duration^project }
		multiply_variable = { project_total_construction_duration_display^project = project_build_amount^project_type }
	}
}

init_project_2 = {
	# Get Construction Speed Modifiers and Set Building Cost
	set_temp_variable = { construction_speed = 1 }

	get_building_construction_values = yes

	# Infrastructure
	if = { limit = { NOT = { check_variable = { project_building_type^project_type = 4 } } }
		set_temp_variable = { target_state_infra_speed = event_target:AC_state_event_target.infrastructure_level }
		multiply_temp_variable = { target_state_infra_speed = 0.075 }
		add_to_temp_variable = { target_state_infra_speed = 1 }
		multiply_temp_variable = { construction_speed = target_state_infra_speed }
	}

	# Reduce Construction speed by 25%
	multiply_temp_variable = { construction_speed = 0.75 }

	# Total Factory Output
	multiply_temp_variable = { construction_speed = 100 }

	# Days to build
	divide_temp_variable = { building_cost = construction_speed }

	set_variable = { project_construction_duration^project = building_cost }
	round_variable = project_construction_duration^project

	# Decision tooltip for total time to build
	set_variable = { project_total_construction_duration_display^project = project_construction_duration^project }
	multiply_variable = { project_total_construction_duration_display^project = project_build_amount^project_type }
}

# Either FROM or Country
start_project = {
	get_available_project = yes

	if = { limit = { has_variable = new_project }
		set_variable = { project = new_project }
		set_variable = { project_type = -1 }

		init_project_2 = yes

		event_target:AC_state_event_target = {
			add_to_array = { projects_in_state = PREV.id } #Should be FROM
			set_variable = { project_target_state_@PREV = PREV.project }
			set_variable = { PREV.project_array^PREV.project = THIS.id }
			CONTROLLER = { set_variable = { PREV.PREV.project_target_country^PREV.PREV.project = THIS.id } }
		}

		# Active Project Variables
		set_variable = { project_build_amount^project = project_build_amount^-1 }
		set_variable = { project_building_type^project = project_building_type^-1 }
		set_variable = { project_monetary_cost^project = project_monetary_cost^-1 }

		# Activate Project
		add_to_variable = { treasury = project_monetary_cost_effect } # Project Monetary Cost Effect is -1
		set_temp_variable = { temp_calculator = project_monetary_cost_effect }
		multiply_temp_variable = { temp_calculator = -1 }
		add_to_variable = { int_investments = temp_calculator }
		add_to_variable = { active_projects = 1 }

		meta_effect = {
			text = {
				activate_decision = AC_project_[x]_decision

				var:project_target_country^project = {
					set_variable = { project_target_construction_duration = PREV.project_construction_duration^PREV.project }
					activate_targeted_decision = { target = PREV decision = AC_project_[x]_target_decision }
				}
			}
			x = "[?project]"
		}

		clear_variable = project
		clear_variable = project_state
		clear_variable = project_type
		clear_variable = new_project
	}

	refresh_gui = yes
}

complete_project = {
	if = { limit = { check_variable = { project_array^project < 0 } }

		set_variable = { project_type = project }

		var:project_array^project = {
			if = {
				limit = { investment_building_slot_available = yes }

				add_finished_buildings = yes

				# Opinion Bonus Towards Builder
				CONTROLLER = { add_opinion_modifier = { target = ROOT modifier = AC_construction_opinion4 } }

				# Reactivate Project if there is a queue
				ROOT = {
					if = {
						limit = {
							check_variable = { project_build_amount^project > 1 }
							PREV = { investment_building_slot_available = yes }
						}

						subtract_from_variable = { project_build_amount^project = 1 }

						PREV = { init_project_2 = yes }

						meta_effect = {
							text = {
								activate_decision = AC_project_[x]_decision

								PREV = {
									CONTROLLER = {
										set_variable = { project_target_construction_duration = ROOT.project_construction_duration^ROOT.project }
										remove_targeted_decision = { target = ROOT decision = AC_project_[x]_target_decision }
										activate_targeted_decision = { target = ROOT decision = AC_project_[x]_target_decision }
									}
								}
							}
							x = "[?ROOT.project]"
						}
					}
					else = { end_project = yes }
				}
			}
			else = { ROOT = { end_project = yes } }
		}
	}

	clear_variable = project
	clear_variable = project_type

	refresh_gui = yes
}

end_project = {
	if = { limit = { check_variable = { project_array^project < 0 } }

		var:project_array^project = {
			clear_variable = project_target_state_@PREV
			remove_from_array = { array = projects_in_state value = PREV.id }
		}

		meta_effect = {
			text = {
				var:project_target_country^project = {
					clear_variable = project_target_construction_duration
					remove_targeted_decision = { target = PREV decision = AC_project_[x]_target_decision }
				}

				set_variable = { project_array^project = 1 }
				country_event = { id = AC_event.3[x] hours = 26 }
			}
			x = "[?project]"
		}

		clear_variable = project_build_amount^project
		clear_variable = project_building_type^project
		clear_variable = project_construction_duration^project
		clear_variable = project_construction_speed_display^project
		clear_variable = project_total_construction_duration_display^project
		clear_variable = project_target_country^project

		# Refund Remaining Cash if the project is unfinished
		if = { limit = { check_variable = { project_monetary_cost^project > 0 } }
			add_to_variable = { treasury = project_monetary_cost^project }
			subtract_from_variable = { int_investments = project_monetary_cost^project }
		}
		clear_variable = project_monetary_cost^project
	}

	clear_variable = project

	refresh_gui = yes
}
